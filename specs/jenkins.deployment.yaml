apiVersion: v1
kind: Namespace
metadata:
  name: jenkins
---
kind: StorageClass
apiVersion: storage.k8s.io/v1
metadata:
  name: local-storage
provisioner: kubernetes.io/no-provisioner
volumeBindingMode: WaitForFirstConsumer
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: jenkins-pv-volume
  namespace: jenkins
spec:
  capacity:
    storage: 8Gi
  volumeMode: Filesystem
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Delete
  storageClassName: local-storage
  local:
    path: /var/jenkins_pv
  nodeAffinity:
    required:
      nodeSelectorTerms:
        - matchExpressions:
            - key: kubernetes.io/hostname
              operator: In
              values:
                - kubemaster # the kubemaster node contains the data stored in the PersistentVolume
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: jenkins-pvc-volume
  namespace: jenkins
spec:
  accessModes:
    - ReadWriteOnce
  volumeMode: Filesystem
  resources:
    requests:
      storage: 4Gi
  storageClassName: local-storage
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jenkins-master
  namespace: jenkins
spec:
  replicas: 2
  selector:
    matchLabels:
      app: jenkins-master
  template:
    metadata:
      labels:
        app: jenkins-master
    spec:
      serviceAccountName: jenkins-master
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      containers:
        - name: jenkins-master
          image: jenkins/jenkins:lts
          env:
            - name: JAVA_OPTS
              value: -Djenkins.install.runSetupWizard=false # to disable the jenkins initial setup admin password
          ports:
            - name: http-port
              containerPort: 8080
            - name: jnlp-port
              containerPort: 50000 # inbound jenkins slave agents communicate with the jenkins controller through TCP port 50000 by default
          volumeMounts:
            - name: jenkins-pv-storage
              mountPath: /var/jenkins_home
      volumes:
        - name: jenkins-pv-storage
          persistentVolumeClaim:
            claimName: jenkins-pvc-volume
---
apiVersion: v1
kind: Service
metadata:
  name: jenkins-http
  namespace: jenkins
spec:
  type: NodePort
  ports:
    - nodePort: 31000 # the dashboard is accessible outside the cluster at every node ip on this port
      port: 8080 # the dashboard is accessible inside the cluster at http://jenkins-http:8080
      targetPort: 8080 # the request will be forwarded to the correct pod on this port
      protocol: TCP
  selector:
    app: jenkins-master
---
apiVersion: v1
kind: Service
metadata:
  name: jenkins-jnlp
  namespace: jenkins
spec:
  type: ClusterIP
  ports:
    - protocol: TCP
      port: 50000
      targetPort: 50000
  selector:
    app: jenkins-master
